import telebot
import sqlite3
import psycopg2


connection = psycopg2.connect(
    host = "127.0.0.1",
    user = "postgres",
    password = "xkleeps123",
    database = "postgres"
)
connection.autocommit = True

bot = telebot.TeleBot('6341306871:AAGa2N1ZUQSZT6pbir9TMQ367lJN158QAUk')

name = None
total_seats = 100  # –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç –≤ –∫–æ–Ω—Ü–µ—Ä—Ç–Ω–æ–º –∑–∞–ª–µ

@bot.message_handler(commands = ['start'])
def main(message):
    bot.send_message(message.chat.id,'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –±–∏–ª–µ—Ç–æ–≤ –≤ —Ç–µ–∞—Ç—Ä–µ /help –¥–ª—è –±–æ–ª—å—à–µ–π –Ω–∏—Ñ–æ—Ä–º–∞—Ü–∏–∏')

@bot.message_handler(commands = ['help'])
def help(message):
    bot.send_message(message.chat.id,'–£–∑–Ω–∞—Ç—å –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (–ù–∞–∑–≤–∞–Ω–∏–µ —Å–ø–µ–∫—Ç–∞–∫–ª—è, –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è —Å–ø–µ–∫—Ç–∞–∫–ª—è) /info')

@bot.message_handler(commands = ['info'])
def info(message):
    # bot.send_message(message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–Ω—Ü–µ—Ä—Ç')
    cursor = connection.cursor()
    cursor.execute("SELECT * FROM cinema;")
    data = cursor.fetchall()
    response = "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–æ–Ω—Ü–µ—Ä—Ç–∞\n"
    for row in data:
            response += f"\n –ö–æ–Ω—Ü–µ—Ä—Ç ‚Ññ: {row[0]}\n –ù–∞–∑–≤–∞–Ω–∏–µ: {row[1]}\n –î–∞—Ç–∞: {row[2]}\n –í—Ä–µ–º—è: {row[3]}\n –û–ø–∏—Å–∞–Ω–∏–µ: {row[4]}\n"
    bot.reply_to(message, response)
    bot.send_message(message.chat.id,f"–î–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –º–µ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ /buy\n–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–±–æ–¥–Ω—ã–µ –º–µ—Å—Ç–∞ /mesto")



@bot.message_handler(commands=['buy'])
def enter_concert_number(message):
    cursor = connection.cursor()
    cursor.execute("SELECT MAX(id) FROM cinema;")
    max_concert_number = cursor.fetchone()[0]
    cursor.close()
    bot.send_message(message.chat.id, f'–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–æ–Ω—Ü–µ—Ä—Ç–∞ –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –º–µ—Å—Ç–∞ (–æ—Ç 1 –¥–æ {max_concert_number})')
    bot.register_next_step_handler(message, enter_name)


def enter_name(message):
    user_concert_number = int(message.text)
    cursor = connection.cursor()
    cursor.execute("SELECT MAX(id) FROM cinema;")
    max_concert_number = cursor.fetchone()[0]
    cursor.close()

    if user_concert_number > max_concert_number:
        bot.send_message(message.chat.id, f'–í–≤–µ–¥–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –∫–æ–Ω—Ü–µ—Ä—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–æ–Ω—Ü–µ—Ä—Ç–∞ –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –º–µ—Å—Ç–∞ (–æ—Ç 1 –¥–æ {max_concert_number})')
        bot.register_next_step_handler(message, enter_name)
    else:
        try:
            concert_number = int(message.text)
            bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –∏–º—è')
            bot.register_next_step_handler(message, reserve_seat, concert_number)
        except ValueError:
            bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –∫–æ–Ω—Ü–µ—Ä—Ç–∞ (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ)')


def reserve_seat(message, concert_number):
    try:
        name = message.text
        # bot.send_photo(message.chat.id, open('mests.jpg', 'rb'))
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ä—è–¥ –∏ –º–µ—Å—Ç–æ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª (–Ω–∞–ø—Ä–∏–º–µ—Ä, "3 5")')
        bot.register_next_step_handler(message, process_reservation, concert_number, name)
    except ValueError:
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–º—è')


def process_reservation(message, concert_number, name):
    try:
        row, seat = map(int, message.text.split())
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –ª–∏ –∑–Ω–∞—á–µ–Ω–∏—è row –∏ seat –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 1 –¥–æ 10
        if (row < 1 or row > 10) or (seat < 1 or seat > 10):
            bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Ç–∞ –≤ –¥–æ–ø—É—Å—Ç–∏–º–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 1 –¥–æ 10.')
            bot.register_next_step_handler(message, process_reservation, concert_number, name)
            return

        cursor = connection.cursor()

        while True:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å —Ç–∞–∫–∏–º–∏ –∂–µ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ concert_number, row –∏ seat
            cursor.execute(
                "SELECT * FROM user_data WHERE cinemas = %s AND place = %s AND row = %s", (concert_number, row, seat))
            existing_reservation = cursor.fetchone()

            if existing_reservation:
                bot.send_message(message.chat.id, '–ú–µ—Å—Ç–æ –∑–∞–Ω—è—Ç–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–µ –º–µ—Å—Ç–æ.')
                # –í—ã–≤–æ–¥–∏–º –∫–∞—Ä—Ç–∏–Ω–∫—É –ø–µ—Ä–µ–¥ –∑–∞–ø—Ä–æ—Å–æ–º –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
                bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–∏–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä—è–¥–∞ –∏ –º–µ—Å—Ç–∞ (–¥–≤–∞ —Ü–µ–ª—ã—Ö —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª)')
                bot.register_next_step_handler(message, process_reservation, concert_number, name)
                return
                
            else:
                # –ü–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π ID –∏–∑ —Ç–∞–±–ª–∏—Ü—ã user_data
                cursor.execute("SELECT MAX(name_id) FROM user_data")
                last_name_id = cursor.fetchone()[0]

                if last_name_id:
                    name_id = last_name_id + 1  # –£–≤–µ–ª–∏—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π name_id –Ω–∞ 1
                else:
                    name_id = 1  # –ï—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å name_id —Ä–∞–≤–Ω—ã–º 1

                cursor.execute("INSERT INTO user_data (name_id, cinemas, name, place, row) VALUES (%s, %s, %s, %s, %s)",
                               (name_id, concert_number, name, row, seat))
                connection.commit()
                cursor.close()

                bot.send_message(message.chat.id, f'–ú–µ—Å—Ç–æ {row}, {seat} –Ω–∞ –∫–æ–Ω—Ü–µ—Ä—Ç–µ ‚Ññ {concert_number} —É—Å–ø–µ—à–Ω–æ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–æ!')
                break
    except ValueError:
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä—è–¥–∞ –∏ –º–µ—Å—Ç–∞ (–¥–≤–∞ —Ü–µ–ª—ã—Ö —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª)')

@bot.message_handler(commands=['mesto'])
def show_available_seats(message):
    cursor = connection.cursor()
    cursor.execute("SELECT MAX(id) FROM cinema;")
    max_concert_number = cursor.fetchone()[0]
    cursor.close()
    bot.send_message(message.chat.id, f'–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–æ–Ω—Ü–µ—Ä—Ç–∞ (–æ—Ç 1 –¥–æ {max_concert_number})')
    # bot.send_message(
    #     message.chat.id,
    #     '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–æ–Ω—Ü–µ—Ä—Ç–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–≤–æ–±–æ–¥–Ω—ã—Ö –º–µ—Å—Ç (–æ—Ç 1 –¥–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –∫–æ–Ω—Ü–µ—Ä—Ç–∞)'
    # )
    bot.register_next_step_handler(message, display_seats_info)

def display_seats_info(message):
    try:
        concert_number = int(message.text)
        cursor = connection.cursor()
        cursor.execute(
            "SELECT place, row FROM user_data WHERE cinemas = %s", 
            (concert_number,)
        )
        reserved_seats = cursor.fetchall()
        cursor.close()

        # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å, –≥–¥–µ –∫–ª—é—á - —Ä—è–¥, –∑–Ω–∞—á–µ–Ω–∏–µ - —Å–ø–∏—Å–æ–∫ –º–µ—Å—Ç –≤ —ç—Ç–æ–º —Ä—è–¥—É
        seats_dict = {}
        for row in range(1, 11):
            seats_dict[row] = [''] * 10

        # –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–ª–æ–≤–∞—Ä—å –ø–æ—Å–µ—â–µ–Ω–Ω—ã–º–∏ –º–µ—Å—Ç–∞–º–∏
        for seat in reserved_seats:
            row, place = seat
            seats_dict[row][place - 1] = 'X'  # –ü–æ–º–µ—á–∞–µ–º –∑–∞–Ω—è—Ç—ã–µ –º–µ—Å—Ç–∞ 'X'

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å–æ —Å–≤–æ–±–æ–¥–Ω—ã–º–∏ –∏ –∑–∞–Ω—è—Ç—ã–º–∏ –º–µ—Å—Ç–∞–º–∏ –≤ –≤–∏–¥–µ –º–∞—Ç—Ä–∏—Ü—ã
        seats_matrix_str = '```\n      1 2 3 4  5 6 7  8 9 10\n'
        for row, seats in seats_dict.items():
            seats_matrix_str += f'{row:>2} | '
            for seat in seats:
                if seat == '':
                    seats_matrix_str += '‚¨úÔ∏è'  # –°–≤–æ–±–æ–¥–Ω—ã–µ –º–µ—Å—Ç–∞
                else:
                    seats_matrix_str += 'üî¥'  # –ó–∞–Ω—è—Ç—ã–µ –º–µ—Å—Ç–∞
            seats_matrix_str = seats_matrix_str.strip() + f' | {row}\n'
        seats_matrix_str += '```'

        response = f'–°–æ—Å—Ç–æ—è–Ω–∏–µ –º–µ—Å—Ç –Ω–∞ –∫–æ–Ω—Ü–µ—Ä—Ç–µ ‚Ññ{concert_number}:\n{seats_matrix_str}'
        
        bot.send_message(message.chat.id, response, parse_mode='Markdown')
    except ValueError:
        bot.send_message(
            message.chat.id, 
            '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –∫–æ–Ω—Ü–µ—Ä—Ç–∞ (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ)'
        )

bot.polling(non_stop=True)